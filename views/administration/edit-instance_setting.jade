.box.box-default
  .box-body
    form#is_form(method="post", action="/administration/instance_settings/edit/#{setting._id}")
      .form-group
        label(for="name") Name
        input.form-control#name(type="text", name="name", value=setting.name, readonly="readonly")
      .form-group
        label(for="system_name") System Name
        input.form-control#system_name(type="text", name="setting", value=setting.setting)
      .form-group
        button.btn.btn-primary(type="submit") Save Changes  

  script.
    $("#is_form").submit( function(e) {
      e.preventDefault();

      var url = $(this).attr('action');

      // Abort any pending request
      if (request) {
          request.abort();
      }
      // setup some local variables
      var $form = $(this);

      // Let's select and cache all the fields
      var $inputs = $form.find("input, select, button, textarea");

      // Serialize the data in the form
      var serializedData = $form.serialize();

      // Let's disable the inputs for the duration of the Ajax request.
      // Note: we disable elements AFTER the form data has been serialized.
      // Disabled form elements will not be serialized.
      $inputs.prop("disabled", true);

      // Fire off the request to /form.php
      request = $.ajax({
          url: url,
          type: "post",
         // dataType: "json",
          data: serializedData
      });

      // Callback handler that will be called on success
      request.done(function (response, textStatus, jqXHR){
          // Log a message to the console
          console.log(response);

          if(response == 'success') {
            $('.alert-success').show('slow').delay(1500).hide('slow');

            //$('.modal.fade').modal('hide');

            //$('.ap-item-list').empty().load('/administration/module-list')
          }

      });

      // Callback handler that will be called on failure
      request.fail(function (jqXHR, textStatus, errorThrown){
          // Log the error to the console
          console.error(
              "The following error occurred: "+
              textStatus, errorThrown
          );
      });

      // Callback handler that will be called regardless
      // if the request failed or succeeded
      request.always(function () {
          // Reenable the inputs
          $inputs.prop("disabled", false);
      });

    });   